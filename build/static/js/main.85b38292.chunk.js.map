{"version":3,"sources":["components/hod/SideMenu.js","components/hod/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","info","alignItems","padding","avatar","margin","spacing","backgroundColor","palette","secondary","main","large","width","height","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","background","default","ListItemLink","props","icon","primary","to","renderLink","React","useMemo","forwardRef","itemProps","ref","role","undefined","ListItem","button","component","ListItemIcon","ListItemText","SideMenu","classes","className","CssBaseline","Drawer","variant","paper","anchor","Grid","container","align","justify","item","xs","Avatar","alt","src","Box","textAlign","fontSize","fontWeight","m","Divider","initialEntries","initialIndex","List","Header","AppBar","position","Toolbar","lg","md","sm","App","appMain","paddingLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"waA0BMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTC,cAAe,UAEnBC,KAAM,CACFF,QAAS,OACTG,WAAY,SACZC,QAAS,QAEbC,OAAQ,CACJC,OAAQR,EAAMS,QAAQ,GACtBC,gBAAiBV,EAAMW,QAAQC,UAAUC,MAE7CC,MAAO,CACHC,MAAOf,EAAMS,QAAQ,GACrBO,OAAQhB,EAAMS,QAAQ,IAG1BQ,OAAQ,CACJF,MAtBY,IAuBZG,WAAY,GAEhBC,YAAa,CACTJ,MA1BY,KA6BhBK,QAASpB,EAAMqB,OAAOD,QACtBE,QAAS,CACLC,SAAU,EACVb,gBAAiBV,EAAMW,QAAQa,WAAWC,QAC1CnB,QAASN,EAAMS,QAAQ,QAI/B,SAASiB,EAAaC,GAClB,IAAQC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GAEjBC,EAAaC,IAAMC,SACrB,kBACID,IAAME,YAAW,SAAcC,EAAWC,GACtC,OAAO,cAAC,IAAD,yBAAYN,GAAIA,EAAIM,IAAKA,GAASD,GAAlC,IAA6CE,UAAMC,UAElE,CAACR,IAGL,OACI,6BACI,eAACS,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWV,EAA5B,UACKH,EAAO,cAACc,EAAA,EAAD,UAAed,IAAuB,KAC9C,cAACe,EAAA,EAAD,CAAcd,QAASA,SAYxB,SAASe,IACpB,IAAMC,EAAU/C,IAEhB,OACI,sBAAKgD,UAAWD,EAAQ5C,KAAxB,UACI,cAAC8C,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACIF,UAAWD,EAAQ5B,OACnBgC,QAAQ,YACRJ,QAAS,CACLK,MAAOL,EAAQ1B,aAEnBgC,OAAO,OANX,UAQI,cAACC,EAAA,EAAD,CACIC,WAAS,EACT5C,QAAS,EACT6C,MAAM,SACNC,QAAQ,SAJZ,SAMI,eAACH,EAAA,EAAD,CAAMC,WAAS,EAAC5C,QAAS,EAAzB,UACI,eAAC2C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACI,qBAAKX,UAAWD,EAAQzB,UACxB,cAACsC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAI,8BAA8Bd,UAAWD,EAAQ/B,WAElF,eAACsC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACI,cAACI,EAAA,EAAD,CAAKC,UAAU,SAASC,SAAU,GAAIC,WAAW,mBAAmBC,EAAG,EAAvE,gCACA,cAACJ,EAAA,EAAD,CAAKC,UAAU,SAASC,SAAU,GAAIC,WAAW,mBAAmBC,EAAG,EAAvE,iCAKZ,cAACC,EAAA,EAAD,IACA,cAAC,IAAD,CAAeC,eAAgB,CAAC,WAAYC,aAAc,EAA1D,SAEI,eAACC,EAAA,EAAD,WACI,cAAC3C,EAAD,CAAcI,GAAG,IAAID,QAAQ,OAAOD,KAAM,cAAC,IAAD,MAC1C,cAACF,EAAD,CAAcI,GAAG,YAAYD,QAAQ,WAAWD,KAAM,cAAC,IAAD,MACtD,cAACF,EAAD,CAAcI,GAAG,SAASD,QAAQ,QAAQD,KAAM,cAAC,IAAD,MAChD,cAACF,EAAD,CAAcI,GAAG,IAAID,QAAQ,QAAQD,KAAM,cAAC,IAAD,MAC3C,cAACF,EAAD,CAAcI,GAAG,IAAID,QAAQ,UAAUD,KAAM,cAAC,IAAD,MAC7C,cAACF,EAAD,CAAcI,GAAG,IAAID,QAAQ,UAAUD,KAAM,cAAC,IAAD,MAC7C,cAACF,EAAD,CAAcI,GAAG,IAAID,QAAQ,WAAWD,KAAM,cAAC,IAAD,MAC9C,cAACF,EAAD,CAAcI,GAAG,IAAID,QAAQ,UAAUD,KAAM,cAAC,IAAD,cAIzD,sBAAMkB,UAAWD,EAAQvB,a,sBCrHtB,SAASgD,IACpB,OACI,cAACC,EAAA,EAAD,CAAQC,SAAS,WAAjB,SACI,cAACC,EAAA,EAAD,UAEI,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMI,MAAI,EAACkB,GAAI,GAAIC,GAAI,EAAGC,GAAI,IAE9B,cAACxB,EAAA,EAAD,CAAMI,MAAI,EAACkB,GAAI,GAAIC,GAAI,EAAGC,GAAI,W,YCAnCC,GAlBG9E,aAAW,SAACC,GAAD,MAAY,CACrC8E,QAAS,CACLC,YAAa,QACbhE,MAAO,YAIH,WACR,OACI,qCACI,cAAC6B,EAAD,IACA,qBAAKE,UAAWD,UAAQiC,QAAxB,SACI,cAACR,EAAD,WCRDU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.85b38292.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport List from '@material-ui/core/List'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport PropTypes from 'prop-types'\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport GroupWorkRoundedIcon from '@material-ui/icons/GroupWorkRounded';\r\nimport PeopleRoundedIcon from '@material-ui/icons/PeopleRounded';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\nimport SupervisorAccountRoundedIcon from '@material-ui/icons/SupervisorAccountRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport PowerSettingsNewRoundedIcon from '@material-ui/icons/PowerSettingsNewRounded';\r\nimport Box from '@material-ui/core/Box';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    info: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '10px'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n    const { icon, primary, to } = props;\r\n\r\n    const renderLink = React.useMemo(\r\n        () =>\r\n            React.forwardRef(function Link(itemProps, ref) {\r\n                return <RouterLink to={to} ref={ref} {...itemProps} role={undefined} />;\r\n            }),\r\n        [to],\r\n    );\r\n\r\n    return (\r\n        <li>\r\n            <ListItem button component={renderLink}>\r\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n                <ListItemText primary={primary} />\r\n            </ListItem>\r\n        </li>\r\n    );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n    icon: PropTypes.element,\r\n    primary: PropTypes.string.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function SideMenu() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    align=\"center\"\r\n                    justify=\"center\"\r\n                >\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <div className={classes.toolbar} />\r\n                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.large} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box textAlign=\"center\" fontSize={16} fontWeight=\"fontWeightMedium\" m={1}>Firstname LastName</Box>\r\n                            <Box textAlign=\"center\" fontSize={16} fontWeight=\"fontWeightMedium\" m={1}>Designation</Box>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider />\r\n                <BrowserRouter initialEntries={['/drafts']} initialIndex={0}>\r\n\r\n                    <List>\r\n                        <ListItemLink to=\"/\" primary=\"Home\" icon={<HomeRoundedIcon />} />\r\n                        <ListItemLink to=\"/Division\" primary=\"Division\" icon={<GroupWorkRoundedIcon />} />\r\n                        <ListItemLink to=\"/Teams\" primary=\"Teams\" icon={<PeopleRoundedIcon />} />\r\n                        <ListItemLink to=\"/\" primary=\"Tasks\" icon={<PeopleRoundedIcon />} />\r\n                        <ListItemLink to=\"/\" primary=\"Reports\" icon={<SupervisorAccountRoundedIcon />} />\r\n                        <ListItemLink to=\"/\" primary=\"Profile\" icon={<PersonRoundedIcon />} />\r\n                        <ListItemLink to=\"/\" primary=\"Settings\" icon={<SettingsRoundedIcon />} />\r\n                        <ListItemLink to=\"/\" primary=\"Log Out\" icon={<PowerSettingsNewRoundedIcon />} />\r\n                    </List>\r\n                </BrowserRouter>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n// import { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import InputBase from '@material-ui/core/InputBase';\r\n// import Badge from '@material-ui/core/Badge';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Menu from '@material-ui/core/Menu';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n// import AccountCircle from '@material-ui/icons/AccountCircle';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n// import NotificationsIcon from '@material-ui/icons/Notifications';\r\n// import MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <AppBar position=\"absolute\">\r\n            <Toolbar>\r\n\r\n                <Grid container>\r\n                    <Grid item lg={12} md={6} sm={4}>\r\n                    </Grid>\r\n                    <Grid item lg={12} md={6} sm={4}>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport SideMenu from './components/hod/SideMenu'\r\nimport Header from './components/hod/Header'\r\nimport { classes } from 'istanbul-lib-coverage'\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst useStyles = makeStyles((theme) => ({\r\n    appMain: {\r\n        paddingLeft: '280px',\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <SideMenu />\r\n            <div className={classes.appMain}>\r\n                <Header />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}